#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

// Replace with your network credentials
const char* ssid = "Your_SSID";        // Your Wi-Fi SSID
const char* password = "Your_PASSWORD"; // Your Wi-Fi Password

// Set up the GPIO pins for LEDs/Relays
#define LED1_PIN 2   // GPIO 2 (D4)
#define LED2_PIN 3   // GPIO 3 (D2)
#define LED3_PIN 4   // GPIO 4 (D1)
#define LED4_PIN 5   // GPIO 5 (D0)

// Create an instance of the web server
ESP8266WebServer server(80);

// Handle root URL ("/") for the web page
void handleRoot() {
  String html = "<html><body>";
  html += "<h1>ESP8266 Web Server</h1>";
  html += "<button onclick=\"location.href='/LED1/on'\">Turn LED1 ON</button><br>";
  html += "<button onclick=\"location.href='/LED1/off'\">Turn LED1 OFF</button><br><br>";
  
  html += "<button onclick=\"location.href='/LED2/on'\">Turn LED2 ON</button><br>";
  html += "<button onclick=\"location.href='/LED2/off'\">Turn LED2 OFF</button><br><br>";
  
  html += "<button onclick=\"location.href='/LED3/on'\">Turn LED3 ON</button><br>";
  html += "<button onclick=\"location.href='/LED3/off'\">Turn LED3 OFF</button><br><br>";
  
  html += "<button onclick=\"location.href='/LED4/on'\">Turn LED4 ON</button><br>";
  html += "<button onclick=\"location.href='/LED4/off'\">Turn LED4 OFF</button><br><br>";
  
  html += "</body></html>";
  
  server.send(200, "text/html", html);  // Send the HTML page to the client
}

// Handle requests to turn LEDs on or off
void handleLED1On() {
  digitalWrite(LED1_PIN, HIGH);
  server.send(200, "text/html", "LED1 is now ON. <a href='/'>Back</a>");
}

void handleLED1Off() {
  digitalWrite(LED1_PIN, LOW);
  server.send(200, "text/html", "LED1 is now OFF. <a href='/'>Back</a>");
}

void handleLED2On() {
  digitalWrite(LED2_PIN, HIGH);
  server.send(200, "text/html", "LED2 is now ON. <a href='/'>Back</a>");
}

void handleLED2Off() {
  digitalWrite(LED2_PIN, LOW);
  server.send(200, "text/html", "LED2 is now OFF. <a href='/'>Back</a>");
}

void handleLED3On() {
  digitalWrite(LED3_PIN, HIGH);
  server.send(200, "text/html", "LED3 is now ON. <a href='/'>Back</a>");
}

void handleLED3Off() {
  digitalWrite(LED3_PIN, LOW);
  server.send(200, "text/html", "LED3 is now OFF. <a href='/'>Back</a>");
}

void handleLED4On() {
  digitalWrite(LED4_PIN, HIGH);
  server.send(200, "text/html", "LED4 is now ON. <a href='/'>Back</a>");
}

void handleLED4Off() {
  digitalWrite(LED4_PIN, LOW);
  server.send(200, "text/html", "LED4 is now OFF. <a href='/'>Back</a>");
}

void setup() {
  // Start the serial communication
  Serial.begin(115200);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Initialize the GPIO pins as outputs
  pinMode(LED1_PIN, OUTPUT);
  pinMode(LED2_PIN, OUTPUT);
  pinMode(LED3_PIN, OUTPUT);
  pinMode(LED4_PIN, OUTPUT);

  // Set up HTTP route handlers
  server.on("/", HTTP_GET, handleRoot);            // Handle the root URL
  server.on("/LED1/on", HTTP_GET, handleLED1On);    // Turn LED1 on
  server.on("/LED1/off", HTTP_GET, handleLED1Off);  // Turn LED1 off
  server.on("/LED2/on", HTTP_GET, handleLED2On);    // Turn LED2 on
  server.on("/LED2/off", HTTP_GET, handleLED2Off);  // Turn LED2 off
  server.on("/LED3/on", HTTP_GET, handleLED3On);    // Turn LED3 on
  server.on("/LED3/off", HTTP_GET, handleLED3Off);  // Turn LED3 off
  server.on("/LED4/on", HTTP_GET, handleLED4On);    // Turn LED4 on
  server.on("/LED4/off", HTTP_GET, handleLED4Off);  // Turn LED4 off

  // Start the web server
  server.begin();
  Serial.println("Web server started.");
}

void loop() {
  server.handleClient();  // Handle incoming client requests
}
